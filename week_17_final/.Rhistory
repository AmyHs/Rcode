#編碼(讀文檔有亂碼)
Sys.getlocale()
#文本
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt", fill = T)
setwd("C:/Users/b0520/Desktop/r project/")
#文本
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt", fill = T)
#文本
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T)
Sys.setlocale("LC_ALL", 'chinese')
#文本
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T)
View(mon)
#文本
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T)
#文本
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T,  fileEncoding='UTF-8')
#編碼(讀文檔有亂碼)
Sys.getlocale()
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T,  fileEncoding='UTF-8')
View(mon)
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T,  Encoding='UTF-8')
View(mon)
mon<-read.table(file = "南康-我等你到三十五歲.txt", fill = T,  encoding = 'UTF-8')
View(mon)
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt", fill = T,  encoding = 'UTF-8')
View(mon)
mon<-unlist(mon)
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt", fill = T,  encoding = 'UTF-8')
View(mon)
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt",  encoding = 'UTF-8')
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt", stringsAsFactors = F, encoding = 'UTF-8')
mon<-read.table(file = "邱妙津-蒙馬特遺書.txt", stringsAsFactors = F, fill = T, encoding = 'UTF-8')
View(mon)
class(mon)
head(mon)
#編碼(讀文檔有亂碼)
Sys.getlocale()
#編碼(讀文檔有亂碼)
Sys.getlocale()
Sys.setlocale("LC_ALL", 'UTF-8')
Sys.setlocale("LC_ALL", 'en.us.UTF-8')
head(mon)
cc = worker()
mon<-unlist(mon)
cc = worker()
test<-cc[mon]
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
cc = worker()
test<-cc[mon]
head(test)
head(test, n =100)
head(mon)
class(test)
test
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "latin1")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, local = locale(encoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, local = locale(encoding = "UTF-8"))
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, local = locale(encoding = "UTF-8"))
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, local = locale(encoding = "latin1"))
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, local = locale(encoding = "UTF-8"))
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8", sep = "\t")
class(Hi)
head(Hi)
View(Hi)
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8", sep = "")
View(Hi)
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = F, fileEncoding = "UTF-8")
View(Hi)
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = T, fill = F, fileEncoding = "UTF-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "utf-8")
View(Hi)
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "utf-8")
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
#文本
rm(Hi)
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8-BOM")
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8-BOM")
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, encoding = "utf-8")
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "utf-8")
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8")
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
View(Hi)
class(Hi)
#文本
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
class(Hi)
head(Hi)
#文本
#天啊編碼搞死我
Hi <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
library(tmCN)
install.packages("tmCN")
library(tmCN)
install.packages("tmcn")
library(tmcn)
library(stringr)
library(NLP)
library(tm)
library(tmcn)
library(jiebaRD)
library(stringr)
View(Hi)
Hi <- unlist(Hi)
class(Hi)
?Corpus
Hi.cor <- Corpus(Hi)
Hi.cor <- Corpus(VectorSource(Hi))
Hi.cor <- Corpus(VectorSource(Hi))
View(Hi.cor)
Hi.cor <- tm_map(Hi.cor, rremovePunctuation)
Hi.cor <- tm_map(Hi.cor, removePunctuation)
View(Hi.cor)
head(Hi.cor)
View(Hi.cor)
Hi.cor <- tm_map(Hi.cor, removePunctuation)
Hi.cor <- tm_map(Hi.cor, removeNumber)
Hi.cor <- tm_map(Hi.cor, removeNumbers)
Hi.cor <- tm_map(Hi.cor, removeNumbers)
View(Hi.cor)
#文本
#天啊編碼搞死我
Ti <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
Ti <- unlist(Hi)
Ti.cor <- Corpus(VectorSource(Ti))
gsub("[A-Za-z0-9]","",word)
Ti.cor <- tm_map(Ti.cor, function(word){
gsub("[A-Za-z0-9]","",word)
})
View(Ti.cor)
test <- cc[Hi]
#install.packages("jiebaR")
#install.packages("tm")
#install.packages("tmcn")
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
setwd("C:/Users/b0520/Desktop/r project/")
#文本
#天啊編碼搞死我
Ti <- read.table(file = "太宰治-人間失格.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
Ti <- unlist(Hi)
cc = worker()
test <- cc[Hi]
test
View(test)
#文本
#天啊編碼搞死我
Ti <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, enconding = "UTF-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, enconding = "UTF8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, enconding = "utf-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, enconding = "utf8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEnconding = "utf8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEnconding = "utf-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEnconding = "UTF-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEnconding = "UTF-8-BOM")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, encoding = "UTF-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, encoding = "utf8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEncoding = "utf8")
View(Nan)
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8")
Nan <- read.table(file = "南康-我等你到三十五歲.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
View(Nan)
Nan <- unlist(Nan)
testn <- cc[Nan]
View(testn)
Hi <- read.table(file = "海子-短詩.txt", strinsAsFactors = F , fill = T, fileEncoding = "UTF-8-BOM")
Hi <- unlist(Hi)
testh <- cc[Hi]
Veiw(testh)
Veiw(testh)
veiw(testh)
Veiw(testh)
View(testh)
Hi <- read.table(file = "海子-短詩.txt", strinsAsFactors = F , fill = T, fileEncoding = "UTF-8-BOM")
Hi <- read.table(file = "海子-短詩.txt", stringsAsFactors = F , fill = T, fileEncoding = "UTF-8-BOM")
Hi <- unlist(Hi)
testh <- cc[Hi]
View(testh)
mon <- read.table(file = "邱妙津-蒙馬特遺書.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
mon <- unlist(mon)
testm <- cc[testm]
testm <- cc[Mon]
Mon <- read.table(file = "邱妙津-蒙馬特遺書.txt", stringsAsFactors = F, fill = T, fileEncoding = "UTF-8-BOM")
Mon <- unlist(mon)
testm <- cc[Mon]
View(testm)
getwd()
setwd("C:/Users/b0520/Desktop/r project")
library(tudyverse)
library(tidyverse)
read.csv("詞頻統計.csv")
read.csv("詞頻統計.csv",header = T)
?read.csv
read.csv("詞頻統計.csv",header = T)
read.csv("詞頻統計.csv",header = T)
read.csv("詞頻統計.csv",header = T, sep = ",")
?read.csv
read.table("詞頻統計.csv",header = T, sep = ",")
read.table("詞頻統計.csv",header = T, sep = ",")
read.table("詞頻統計.csv",header = T, sep = ",")
read.csv("詞頻統計.csv")
data <- read.csv("C:/Users/b0520/Desktop/r project/詞頻統計.csv")
data <- data[-(10:22),]
suitotal <- data[c(1,3,4,5),]
natotal <- data[c(2,6,7,8,9,10),]
data <- mutate(data, friendrate = 朋友詞/總字數)
data <- mutate(data, postrate = 正面情緒詞/總字數)
data <- mutate(data, negrate = 負面情緒詞/總字數)
data <- mutate(data, pronrate = 人稱代名詞/總字數)
data <- mutate(data, cograte = 認知歷程詞/總字數)
data <- mutate(data, Ppostrate = 人稱前後正面/總字數)
data <- mutate(data, Pnegrate = 人稱前後負面/總字數)
library(tidyverse)
data <- mutate(data, friendrate = 朋友詞/總字數)
data <- mutate(data, postrate = 正面情緒詞/總字數)
data <- mutate(data, negrate = 負面情緒詞/總字數)
data <- mutate(data, pronrate = 人稱代名詞/總字數)
data <- mutate(data, cograte = 認知歷程詞/總字數)
data <- mutate(data, Ppostrate = 人稱前後正面/總字數)
data <- mutate(data, Pnegrate = 人稱前後負面/總字數)
friendtest <- prop.test(x = c(sum(suitotal$朋友詞), sum(natotal$朋友詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
postest <- prop.test(x = c(sum(suitotal$正面情緒詞), sum(natotal$正面情緒詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
negtest <- prop.test(x = c(sum(suitotal$負面情緒詞), sum(natotal$負面情緒詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
cogtest <- prop.test(x = c(sum(suitotal$認知歷程詞), sum(natotal$認知歷程詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
Ppostest <- prop.test(x = c(sum(suitotal$人稱前後正面), sum(natotal$人稱前後正面)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
Pnegtest <- prop.test(x = c(sum(suitotal$人稱前後負面), sum(natotal$人稱前後負面)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
pronteat <- prop.test(x = c(sum(suitotal$人稱代名詞), sum(natotal$人稱代名詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
friendtest
View(friendtest)
friendtest$estimate
class(friendtest$estimate)
c(friendtest$estimate,postest$estimate)
c(friendtest$estimate, postest$estimate, ncol = 2 )
matrix(friendtest$estimate, postest$estimate, ncol = 2)
data.frame(friendtest$estimate, postest$estimate, ncol = 2)
?data.frame()
?matrix()
data1 <- read.csv("C:/Users/b0520/Desktop/r project/詞頻.csv")
data1 <- data1[-(10:22),]
suitotal1 <- data1[c(1,3,4,5),]
natotal1 <- data1[c(2,6,7,8,9,10),]
prontest <- prop.test(x = c(sum(suitotal1$我), sum(natotal1$我)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greate")
c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate)
matrix(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate), ncol = 2)
matrix(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate), ncol = 2, bycol = T)
matrix(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate), ncol = 2, byrow = T)
matrix(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate), ncol = 2, byrow = F)
friendtest
postest
matrix(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate), ncol = 2, byrow = F)
c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate)
data.frame(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate))
as.data.frame(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate))
as.data.frame(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate))
c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate)
class(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate)
class(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate))
class(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate))
matrix(c(friendtest$estimate, postest$estimate, negtest$estimate, cogtest$estimate, Ppostest$estimate, Pnegtest$estimate,  prontest$estimate), byrow = F, ncol = 2)
friendtest
?matrix
friendtest$estimate
postest$estimate
friendtest$estimate
negtest
cogtest
Ppostest
Pnegtest
pronteat
View(data1)
prontest <- prop.test(x = c(sum(suitotal1$你), sum(natotal1$你)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greate")
prontest
prontest <- prop.test(x = c(sum(suitotal1$她 + suitotal1$他), sum(natotal1$她 + suitotal1$他)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greate")
prontest <- prop.test(x = c(sum((suitotal1$她 + suitotal1$他)), sum((natotal1$她 + suitotal1$他))), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greate")
prontest <- prop.test(x = c(sum(suitotal1$她, suitotal1$他), sum(natotal1$她, suitotal1$他)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greate")
prontest <- prop.test(x = c(sum(suitotal1$她, suitotal1$他), sum(natotal1$她, suitotal1$他)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greater")
prontest
freq <- read.csv("C:/Users/b0520/Desktop/詞類頻率.csv")
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
View(freq)
View(freq)
?gather()
freq <- gather(freq, key = c("自殺作家","非自殺作家"))
freq <- gather(freq, "自殺作家","非自殺作家")
freq
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
freq <- gather(freq, "自殺作家","非自殺作家")
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
freq <- gather(freq,key = key, value= value, "自殺作家","非自殺作家")
freq
ggplot2(freq, aes(x = x, y = key)) + geom_dotplot()
library(ggplot2)
ggplot2(freq, aes(x = x, y = key)) + geom_dotplot()
ggplot(freq, aes(x = x, y = key)) + geom_dotplot()
freq
ggplot(freq, aes(x = X, y = key)) + geom_dotplot()
ggplot(freq, aes(x = X, y = value, color =key )) + geom_dotplot()
ggplot(freq, aes(x = X, y = log(value), color =key )) + geom_dotplot()
log(value)
freq$value
log(freq$value)
ggplot(freq, aes(x = X, y = log(value), color =key )) + geom_dotplot()
freq <- mutate(freq, logval = log(value))
freq
ggplot(freq, aes(x = X, y = logval, color =key )) + geom_dotplot()
freq <- mutate(freq, logval = -log(value))
freq
ggplot(freq, aes(x = X, y = logval, color =key )) + geom_dotplot(binwidth =1 )
ggplot(freq, aes(x = X, y = logval, color =key )) + geom_dotplot(binwidth =25 )
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_bar()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_plot()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_dotplot()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()+ geom_abline()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()+ geom_smooth()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()+ geom_smooth(aes(col = Key))
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()+ geom_smooth(aes(col = freq$Key))
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()
ggplot(freq, aes(x = X, y = logval, color =key)) + geom_point()+ geom_line()
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
freq
freq <- mutate(freq, logval = -log(自殺作家))
freq <- mutate(freqsui, logval = -log(自殺作家))
freq <- mutate(freq, logsui = -log(自殺作家))
freq <- mutate(freq, logna = -log(非自殺作家))
ggplot(freq) + geom_point()+ geom_line(aes(x = X , y = logsui))
ggplot(freq, aes(x = X))+ geom_line(aes( y = logsui))
ggplot(freq, aes(x = X))+ geom_line(aes( y = logsui)) + geom_line(aes(y = logna))
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
freq <- gather(freq, key = key, value= value, "自殺作家","非自殺作家")
freq <- gather(freq, key = key, value= value, "自殺作家","非自殺作家")
freq <- mutate(freq, logval = -log(value) )
ggplot(freq, aes(x = X))+ geom_line(aes( y = logval))
ggplot(freq, aes(x = X , y = logval))+ geom_line()
ggplot(freq, aes(x = X , y = logval))+ geom_line(y = key$自殺作家)
freq
ggplot(freq, aes(x = X , y = logval))+ geom_line(color = key)
ggplot(freq, aes(x = X , y = logval))+ geom_line(aes(color = key))
ggplot(freq, aes(x = as.numeric(X) , y = logval))+ geom_line(aes(color = key, ad))
ggplot(freq, aes(x = X , y = logval))+ geom_line(aes(color = key, ad))
ggplot(freq, aes(x = as.numeric(X) , y = logval))+ geom_line(aes(color = key))
ggplot(freq, aes(x = X , y = logval))+ geom_line(aes(color = key))
ggplot(freq, aes(x = X , y = logval, group = 1))+ geom_line(aes(color = key))
ggplot(freq, aes(x = X , y = logval, group = 2))+ geom_line(aes(color = key))
ggplot(freq, aes(x = X , y = logval, group = 5))+ geom_line(aes(color = key))
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(color = key))
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line()
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = 1))
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = 2))
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = X))
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = key))
library(tidyverse)
data <- read.csv("C:/Users/b0520/Desktop/r project/詞頻統計.csv")
data <- data[-(10:22),]
suitotal <- data[c(1,3,4,5),]
natotal <- data[c(2,6,7,8,9,10),]
data <- mutate(data, friendrate = 朋友詞/總字數)
data <- mutate(data, postrate = 正面情緒詞/總字數)
data <- mutate(data, negrate = 負面情緒詞/總字數)
data <- mutate(data, pronrate = 人稱代名詞/總字數)
data <- mutate(data, cograte = 認知歷程詞/總字數)
data <- mutate(data, Ppostrate = 人稱前後正面/總字數)
data <- mutate(data, Pnegrate = 人稱前後負面/總字數)
friendtest <- prop.test(x = c(sum(suitotal$朋友詞), sum(natotal$朋友詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
postest <- prop.test(x = c(sum(suitotal$正面情緒詞), sum(natotal$正面情緒詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
negtest <- prop.test(x = c(sum(suitotal$負面情緒詞), sum(natotal$負面情緒詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
cogtest <- prop.test(x = c(sum(suitotal$認知歷程詞), sum(natotal$認知歷程詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
Ppostest <- prop.test(x = c(sum(suitotal$人稱前後正面), sum(natotal$人稱前後正面)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
Pnegtest <- prop.test(x = c(sum(suitotal$人稱前後負面), sum(natotal$人稱前後負面)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
pronteat <- prop.test(x = c(sum(suitotal$人稱代名詞), sum(natotal$人稱代名詞)), n = c(sum(data$總字數), sum(data$總字數)), alternative = "greater")
data1 <- read.csv("C:/Users/b0520/Desktop/r project/詞頻.csv")
data1 <- data1[-(10:22),]
suitotal1 <- data1[c(1,3,4,5),]
natotal1 <- data1[c(2,6,7,8,9,10),]
prontest <- prop.test(x = c(sum(suitotal1$我), sum(natotal1$我)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greater")
prontest <- prop.test(x = c(sum(suitotal1$你), sum(natotal1$你)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greater")
prontest <- prop.test(x = c(sum(suitotal1$她, suitotal1$他), sum(natotal1$她, suitotal1$他)), n = c(sum(data1$總字數), sum(data1$總字數)), alternative = "greater")
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
freq <- gather(freq, key = key, value= value, "自殺作家","非自殺作家")
freq <- mutate(freq, logsui = log(自殺作家))
freq <- mutate(freq, logna = log(非自殺作家))
freq <- mutate(freq, logval = log(value) )
library(ggplot2)
freq <- read.csv("C:/Users/b0520/Desktop/freq.csv")
freq <- read.csv("C:/Users/b0520/Desktop/r project/freq.csv")
freq <- gather(freq, key = key, value= value, "自殺作家","非自殺作家")
freq <- mutate(freq, logsui = log(自殺作家))
freq <- mutate(freq, logna = log(非自殺作家))
freq <- gather(freq, key = key, value= value, "自殺作家","非自殺作家")
View(freq)
freq <- read.csv("C:/Users/b0520/Desktop/r project/freq.csv")
freq <- mutate(freq, logsui = log(自殺作家))
View(freq)
freq <- mutate(freq, logna = log(非自殺作家))
freq <- mutate(freq, logval = log(value) )
freq <- gather(freq, key = key, value= value, "自殺作家","非自殺作家")
freq <- mutate(freq, logval = log(value) )
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = key))+ geom_title(x = )
library(ggplot2)
library(ggplot2)
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = key))+ geom_title(x = )
ggplot(freq, aes(x = X , y = logval, color = key)) + geom_point() + geom_line(aes(group = key))
